
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Starter Template for Bootstrap</title>

    <link href="/static/bootstrap.min.css" rel="stylesheet">
    <link href="/static/leaflet.css" rel="stylesheet" />
    <script src="/static/leaflet.js"></script>

    <style type="text/css">
    #map { height: 600px; }
    path {
      stroke-width: 1px;
      stroke: grey;
      stroke-opacity: 0.3;
    }
    </style>


  </head>

  <body>

    <nav class="navbar navbar-inverse">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Project name</a>
        </div>
        <div id="navbar" class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li class="active"><a href="#">Home</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#contact">Contact</a></li>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </nav>

    <div class="container">

      <div class="row">
        <div class="col-md-12">
           <div id="map"></div>
        </div>
      </div>

    </div><!-- /.container -->

  <script type="text/javascript">
var map = L.map('map').setView([51.505, -0.09], 3);
L.tileLayer('/api/map/{z}/{x}/{y}/tile.png', {maxZoom: 18, minZoom: 0}).addTo(map);
var countryLayer = L.geoJSON().addTo(map);

var xhr = new XMLHttpRequest();
xhr.onreadystatechange = function() {
    if (xhr.readyState == XMLHttpRequest.DONE) {
        countryLayer.addData(JSON.parse(xhr.responseText));
    }
}
xhr.open('GET', '/static/countries.geo.json', true);
xhr.send(null);
  </script>

  </body>
</html>
